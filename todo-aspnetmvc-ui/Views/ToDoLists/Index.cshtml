@{
    Layout = "_ToDoListsLayout";
}

@using Newtonsoft.Json;
@using todo_aspnetmvc_ui.Infrastructure
@using System.ComponentModel.DataAnnotations;

@model ToDoListsViewModel

<div class="row m-1 p-1" style="background: whitesmoke">
    <div id="todosummary" class="col-auto">
        <div class="nav flex-column nav-pills" id="v-pills-tab" role="textbox" aria-orientation="vertical">
            <partial name="_ToDoListsSummary" model="Model" />
        </div>
        <br />
    </div>
    <div class="col">
        <div class="col-3 col-md-5">
            <form method="post" asp-action="CreateToDoList" asp-controller="ToDoLists" autocomplete="off">
                <div class="input-group mb-3">
                    <input type="text" class="form-control" name="newTodoListTitle" placeholder="ToDo list title" aria-label="ToDo list title" required>
                    <input type="submit" class="btn btn-success" value="Create list" />
                </div>
            </form>
            <form asp-controller="ToDoLists" asp-action="UpdateGeneralList" id="listsUpdateForm">
                <div class="row">
                    <div class="col-auto">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="showHidedListsChecked" asp-for="@Model.ShowHiddenToDoLists"
                                   onclick="updateList()" name="showHiddenLists">
                            <label class="form-check-label" for="showHidedListsChecked">
                                Show hidden lists (@Model.SummaryOfToDoLists.HiddenToDoListsCount)
                            </label>
                        </div>
                    </div>
                    <div class="col-auto">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="showCompletedTasksChecked" asp-for="@Model.ShowCompletedTasks"
                                   onclick="updateList()" name="showCompletedTasks">
                            <label class="form-check-label" for="showCompletedTasksChecked">Show completed tasks in lists</label>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="accordion mb-0" id="todoListsPaging">
            @foreach (var todoList in Model.ToDoLists)
            {
                <div class="accordion-item" style="background:azure">
                    <h2 class="accordion-header" id="heading@(todoList.Id)">
                        <button class="accordion-button collapsed" type="button" style="font-weight: bold" data-bs-toggle="collapse" data-bs-target="#name@(todoList.Id)" aria-expanded="false" aria-controls="name@(todoList.Id)">
                            @todoList.MainTitle | @(todoList.Status.GetAttribute<DisplayAttribute>().Name)
                        </button>
                    </h2>
                    <div id="name@(todoList.Id)" class="accordion-collapse collapse" aria-labelledby="heading@(todoList.Id)">
                        <div class="accordion-body">
                            <div class="row gy-2 gx-3 align-items-center">
                                <div class="col-auto">
                                    <form method="post" asp-controller="ToDoLists">
                                        <button type="button" class="btn btn-success btn-sm form-control" data-bs-toggle="modal" data-bs-target="#addItemModal@(todoList.Id)">
                                            Add task
                                        </button>
                                        <partial name="_AddToDoItem" model="@(new ToDoEntry { ToDoList = todoList})" />
                                    </form>
                                </div>
                                <div class="col-auto">
                                    <a class="btn btn-outline-primary btn-sm form-control" asp-action="OpenToDoList" asp-route-todoListId="@todoList.Id">
                                        Edit list
                                    </a>
                                </div>
                                <div class="col-auto">
                                    <button onclick="copyToClipboard(@(JsonConvert.SerializeObject(todoList, Formatting.Indented, new ToDoStatusJsonConverter())))"
                                            type="button" class="btn btn-outline-info btn-sm form-control">
                                        Copy list
                                    </button>
                                </div>

                                <div class="col d-flex flex-row-reverse">
                                    <div class="p-2 form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="hideListChecked"
                                               onclick="updateToDoListsVisiblityState(@todoList.Id, '@Url.Action("ChangeVisiblityState", "ToDoLists")')" checked="@todoList.IsVisible">
                                        <label class="form-check-label" for="hideListChecked">List is visible</label>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <form method="post" asp-controller="ToDoLists">
                                @{
                                    List<ToDoEntry> tasks;
                                }
                                @if (Model.ShowCompletedTasks)
                                {
                                    tasks = todoList.ToDoEntries.OrderBy(entry => entry.OrdinalNumber).ToList();
                                }
                                else
                                {
                                    tasks = todoList.ToDoEntries.Where(list => list.Status != ToDoStatus.Completed)
                                                                .OrderBy(item => item.OrdinalNumber)
                                                                .ToList();
                                }

                                @if (tasks.Count() != 0)
                                {
                                    <partial name="_ToDoItems" model="@tasks" />
                                }
                                else if (todoList.ToDoEntries.Count() == 0)
                                {
                                    <p class="fs-4 fw-lighter text-center">
                                        No tasks yet
                                    </p>
                                }
                                else
                                {
                                    <p class="fs-4 fw-lighter text-center">
                                        All tasks is completed.
                                    </p>
                                }
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>
        <br />
        @if (Model.PagingInfo.TotalPages > 1)
        {
            <pagenav page-model="@Model.PagingInfo" page-action="Index" page-classes-enabled="true"
                     page-class="page-link" page-class-normal="page-item" page-class-selected="page-item active"
                     aria-label="...">
            </pagenav>
        }
        <partial name="_CopyListToastForm" />
    </div>
</div>




